{"version":3,"sources":["reportWebVitals.js","services/sample.js","components/flexDemo.js","App.js","core/config.js","core/context.js","core/actions.js","core/seed.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SampleService","sayHai","console","log","FlexDemo","id","className","App","useEffect","config","selects","context","actions","increaseCount","state","data","count","setFlexSelect","select","seed","Entry","useState","setState","updateContext","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAYeA,EAZS,SAACC,GACrBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCDIQ,G,YANc,CAC5BC,OAAQ,kBAAMC,QAAQC,IAAI,U,OCMZC,EALE,kBAChB,qBAAKC,GAAG,YAAR,SACC,qBAAKC,UAAU,UAAf,qBCWaC,EAVH,WAGX,OAFAC,oBAAUR,EAAcC,OAAQ,IAG/B,qBAAKK,UAAU,MAAf,SACEF,OCNWK,EAJA,CACdC,QAAS,CAAC,SCSIC,EANC,CACfC,QCGe,CACfC,cATqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,MAAsB,CAC3CC,MAAOF,EAAME,MAAQD,IASrBE,cANqB,SAAC,GAAD,MAAe,CACpCC,OADqB,EAAGH,QDExBN,SACAU,KELY,CACZD,OAAQT,EAAOC,QAAQ,KCKlBU,EAAQ,WACb,MAA0BC,mBAASV,EAAQQ,MAA3C,mBAAOL,EAAP,KAAcQ,EAAd,KAIA,OAFAC,IAAcZ,EAAS,CAAEG,QAAOQ,aAEzBf,EAAII,IAGZa,IAASC,OAAO,cAAC,IAAMC,WAAP,UACf,cAAC,EAAD,MAEDC,SAASC,eAAe,SAKxBrC,M","file":"static/js/main.eef012be.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n\tif(onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","const sampleService = () => ({\n\tsayHai: () => console.log('Hi!'), // eslint-disable-line no-console\n});\n\nconst SampleService = sampleService();\n\nexport default SampleService;\n","import { React } from 'react';\n\nconst FlexDemo = () =>\n\t<div id=\"container\">\n\t\t<div className=\"content\">Text</div>\n\t</div>;\n\nexport default FlexDemo;\n","import { React, useEffect } from 'react';\nimport './App.scss';\nimport SampleService from './services/sample';\nimport FlexDemo from './components/flexDemo';\n\nconst App = () => {\n\tuseEffect(SampleService.sayHai, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{FlexDemo()}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const config = {\n\tselects: ['none'],\n};\n\nexport default config;\n","import actions from './actions';\nimport config from './config';\nimport seed from './seed';\n\nconst context = {\n\tactions,\n\tconfig,\n\tseed,\n};\n\nexport default context;\n","const increaseCount = ({ state, data }) => ({\n\tcount: state.count + data,\n});\n\nconst setFlexSelect = ({ data }) => ({\n\tselect: data,\n});\n\nconst actions = {\n\tincreaseCount,\n\tsetFlexSelect,\n};\n\nexport default actions;\n","import config from './config';\n\nconst seed = {\n\tselect: config.selects[0],\n};\n\nexport default seed;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport updateContext from '@laufire/resist';\nimport './index.css';\nimport App from './App';\nimport context from './core/context';\n\nconst Entry = () => {\n\tconst [state, setState] = useState(context.seed);\n\n\tupdateContext(context, { state, setState });\n\n\treturn App(context);\n};\n\nReactDOM.render(<React.StrictMode>\n\t<Entry/>\n</React.StrictMode>,\ndocument.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}